{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\conditional-rendering\\\\condition.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//nterview Tip\n\n// \"In React, conditional rendering lets us show different UI based on state or props. We can use if statements, \n// ternary operators, or logical && depending on how simple or complex the condition is. It's a clean way to make\n//  our components dynamic and interactive.\"\n\n// UserCondition.js\nfunction UserCondition(props) {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: props.isLoggedIn ? `Welcome back ${props.username}` : 'Please log in to continue'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = UserCondition;\nexport default UserCondition;\nvar _c;\n$RefreshReg$(_c, \"UserCondition\");","map":{"version":3,"names":["UserCondition","props","_jsxDEV","children","isLoggedIn","username","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/react/counter-react/src/conditional-rendering/condition.js"],"sourcesContent":["//nterview Tip\r\n\r\n// \"In React, conditional rendering lets us show different UI based on state or props. We can use if statements, \r\n// ternary operators, or logical && depending on how simple or complex the condition is. It's a clean way to make\r\n//  our components dynamic and interactive.\"\r\n\r\n// UserCondition.js\r\nfunction UserCondition(props) {\r\n  return (\r\n    <h2>\r\n      {props.isLoggedIn\r\n        ? `Welcome back ${props.username}`\r\n        : 'Please log in to continue'}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default UserCondition;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA,SAASA,aAAaA,CAACC,KAAK,EAAE;EAC5B,oBACEC,OAAA;IAAAC,QAAA,EACGF,KAAK,CAACG,UAAU,GACb,gBAAgBH,KAAK,CAACI,QAAQ,EAAE,GAChC;EAA2B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAET;AAACC,EAAA,GARQV,aAAa;AAUtB,eAAeA,aAAa;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}