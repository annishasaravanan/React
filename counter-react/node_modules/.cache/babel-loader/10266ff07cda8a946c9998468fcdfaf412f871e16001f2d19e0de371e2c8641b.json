{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\quize-app\\\\quize.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quizData = [{\n  question: \"What is the capital of France?\",\n  options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\n  answer: \"Paris\"\n}, {\n  question: \"Which language is used in React?\",\n  options: [\"Python\", \"JavaScript\", \"Java\", \"C++\"],\n  answer: \"JavaScript\"\n}, {\n  question: \"Who developed React?\",\n  options: [\"Google\", \"Microsoft\", \"Facebook\", \"Amazon\"],\n  answer: \"Facebook\"\n}];\nfunction Quize() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(quizData.length).fill(null));\n  const [showScore, setShowScore] = useState(false);\n  const handleOptionSelect = option => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[currentQuestion] = option;\n    setSelectedAnswers(updatedAnswers);\n  };\n  const handlePrev = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n  const handleNext = () => {\n    if (currentQuestion < quizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n  const calculateScore = () => {\n    let score = 0;\n    quizData.forEach((q, index) => {\n      if (selectedAnswers[index] === q.answer) {\n        score += 1;\n      }\n    });\n    return score;\n  };\n  const handleSubmit = () => {\n    setShowScore(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), !showScore ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Question \", currentQuestion + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quizData[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), quizData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: option,\n              checked: selectedAnswers[currentQuestion] === option,\n              onChange: () => handleOptionSelect(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrev,\n          disabled: currentQuestion === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: currentQuestion === quizData.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Your Score: \", calculateScore(), \" / \", quizData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Quize, \"hB50F7pqFHZ9DFUcaRi/johbNmQ=\");\n_c = Quize;\nexport default Quize;\nvar _c;\n$RefreshReg$(_c, \"Quize\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","quizData","question","options","answer","Quize","_s","currentQuestion","setCurrentQuestion","selectedAnswers","setSelectedAnswers","Array","length","fill","showScore","setShowScore","handleOptionSelect","option","updatedAnswers","handlePrev","handleNext","calculateScore","score","forEach","q","index","handleSubmit","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","name","value","checked","onChange","marginTop","onClick","disabled","marginLeft","window","location","reload","_c","$RefreshReg$"],"sources":["E:/react/counter-react/src/quize-app/quize.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst quizData = [\r\n  {\r\n    question: \"What is the capital of France?\",\r\n    options: [\"Berlin\", \"Madrid\", \"Paris\", \"Lisbon\"],\r\n    answer: \"Paris\",\r\n  },\r\n  {\r\n    question: \"Which language is used in React?\",\r\n    options: [\"Python\", \"JavaScript\", \"Java\", \"C++\"],\r\n    answer: \"JavaScript\",\r\n  },\r\n  {\r\n    question: \"Who developed React?\",\r\n    options: [\"Google\", \"Microsoft\", \"Facebook\", \"Amazon\"],\r\n    answer: \"Facebook\",\r\n  },\r\n];\r\n\r\nfunction Quize() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(quizData.length).fill(null));\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  const handleOptionSelect = (option) => {\r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[currentQuestion] = option;\r\n    setSelectedAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestion < quizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    let score = 0;\r\n    quizData.forEach((q, index) => {\r\n      if (selectedAnswers[index] === q.answer) {\r\n        score += 1;\r\n      }\r\n    });\r\n    return score;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setShowScore(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial' }}>\r\n      <h2>Quiz App</h2>\r\n\r\n      {!showScore ? (\r\n        <>\r\n          <div>\r\n            <h3>Question {currentQuestion + 1}:</h3>\r\n            <p>{quizData[currentQuestion].question}</p>\r\n\r\n            {quizData[currentQuestion].options.map((option, index) => (\r\n              <div key={index}>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"option\"\r\n                    value={option}\r\n                    checked={selectedAnswers[currentQuestion] === option}\r\n                    onChange={() => handleOptionSelect(option)}\r\n                  />\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div style={{ marginTop: '20px' }}>\r\n            <button onClick={handlePrev} disabled={currentQuestion === 0}>Previous</button>\r\n            <button onClick={handleNext} disabled={currentQuestion === quizData.length - 1}>Next</button>\r\n            <button onClick={handleSubmit} style={{ marginLeft: '10px' }}>Submit</button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <h3>Your Score: {calculateScore()} / {quizData.length}</h3>\r\n          <button onClick={() => window.location.reload()}>Restart Quiz</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quize;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}