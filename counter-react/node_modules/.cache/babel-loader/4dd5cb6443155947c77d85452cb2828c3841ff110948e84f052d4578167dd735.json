{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\mini\\\\Click the Circle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClickCircleGame() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [circlePosition, setCirclePosition] = useState({\n    top: '50%',\n    left: '50%'\n  });\n  const [visible, setVisible] = useState(true);\n\n  // Update circle position every 2 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const top = Math.floor(Math.random() * 80) + 10 + '%';\n      const left = Math.floor(Math.random() * 80) + 10 + '%';\n      setCirclePosition({\n        top,\n        left\n      });\n      setVisible(true); // show new circle\n    }, 2000);\n    return () => clearInterval(interval); // cleanup\n  }, []);\n  const handleClick = () => {\n    setScore(score + 1);\n    setVisible(false); // hide circle after successful click\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '90vh',\n      backgroundColor: '#f0f0f0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      style: {\n        position: 'absolute',\n        top: circlePosition.top,\n        left: circlePosition.left,\n        width: 50,\n        height: 50,\n        borderRadius: '50%',\n        backgroundColor: 'red',\n        cursor: 'pointer'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ClickCircleGame, \"dcUnJ/7JEAv0wigZjquPOox5Nk8=\");\n_c = ClickCircleGame;\nexport default ClickCircleGame;\nvar _c;\n$RefreshReg$(_c, \"ClickCircleGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ClickCircleGame","_s","score","setScore","circlePosition","setCirclePosition","top","left","visible","setVisible","interval","setInterval","Math","floor","random","clearInterval","handleClick","style","position","width","height","backgroundColor","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","borderRadius","cursor","_c","$RefreshReg$"],"sources":["E:/react/counter-react/src/mini/Click the Circle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ClickCircleGame() {\r\n  const [score, setScore] = useState(0);\r\n  const [circlePosition, setCirclePosition] = useState({ top: '50%', left: '50%' });\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  // Update circle position every 2 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const top = Math.floor(Math.random() * 80) + 10 + '%';\r\n      const left = Math.floor(Math.random() * 80) + 10 + '%';\r\n      setCirclePosition({ top, left });\r\n      setVisible(true); // show new circle\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval); // cleanup\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setScore(score + 1);\r\n    setVisible(false); // hide circle after successful click\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%', height: '90vh', backgroundColor: '#f0f0f0' }}>\r\n      <h2 style={{ textAlign: 'center' }}>Score: {score}</h2>\r\n      {visible && (\r\n        <div\r\n          onClick={handleClick}\r\n          style={{\r\n            position: 'absolute',\r\n            top: circlePosition.top,\r\n            left: circlePosition.left,\r\n            width: 50,\r\n            height: 50,\r\n            borderRadius: '50%',\r\n            backgroundColor: 'red',\r\n            cursor: 'pointer',\r\n          }}\r\n        ></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClickCircleGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC;IAAEU,GAAG,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAC;EACjF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAML,GAAG,GAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG;MACrD,MAAMP,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG;MACtDT,iBAAiB,CAAC;QAAEC,GAAG;QAAEC;MAAK,CAAC,CAAC;MAChCE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMM,aAAa,CAACL,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBb,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBO,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACEV,OAAA;IAAKkB,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBAC9FvB,OAAA;MAAIkB,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,GAAC,SAAO,EAACpB,KAAK;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtDnB,OAAO,iBACNT,OAAA;MACE6B,OAAO,EAAEZ,WAAY;MACrBC,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBZ,GAAG,EAAEF,cAAc,CAACE,GAAG;QACvBC,IAAI,EAAEH,cAAc,CAACG,IAAI;QACzBY,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVS,YAAY,EAAE,KAAK;QACnBR,eAAe,EAAE,KAAK;QACtBS,MAAM,EAAE;MACV;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA1CQD,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AA4CxB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}