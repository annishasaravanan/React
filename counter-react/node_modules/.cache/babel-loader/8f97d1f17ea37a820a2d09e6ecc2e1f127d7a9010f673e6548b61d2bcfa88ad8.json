{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\mini\\\\squidgame.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst players = [\"Player 001 (Oh Il-nam)\", \"Player 067 (Kang Sae-byeok)\", \"Player 456 (Seong Gi-hun)\", \"Player 218 (Cho Sang-woo)\", \"Player 101 (Jang Deok-su)\"];\nfunction SquidGameMovieTask() {\n  _s();\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [fate, setFate] = useState(\"\");\n  const [showResult, setShowResult] = useState(false);\n  useEffect(() => {\n    if (showResult) {\n      const timeout = setTimeout(() => {\n        const random = Math.random() < 0.5 ? \"❌ Eliminated\" : \"✅ Survived\";\n        setFate(random);\n      }, 1500); // suspense delay\n\n      return () => clearTimeout(timeout);\n    }\n  }, [showResult]);\n  const handleReveal = () => {\n    if (currentPlayer < players.length) {\n      setFate(\"\");\n      setShowResult(true);\n    }\n  };\n  const handleNext = () => {\n    setShowResult(false);\n    setCurrentPlayer(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      paddingTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDD91 Squid Game Fate Reveal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currentPlayer < players.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: players[currentPlayer]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), showResult ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: fate.includes(\"Survived\") ? \"green\" : \"red\"\n        },\n        children: fate || \"Revealing fate...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReveal,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"18px\"\n        },\n        children: \"Reveal Fate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), fate && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        style: {\n          marginTop: \"20px\",\n          padding: \"8px 16px\"\n        },\n        children: \"Next Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Over! All player fates revealed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SquidGameMovieTask, \"B1r4bJG81txf7WNfFjz4HM5zllU=\");\n_c = SquidGameMovieTask;\nexport default SquidGameMovieTask;\nvar _c;\n$RefreshReg$(_c, \"SquidGameMovieTask\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","players","SquidGameMovieTask","_s","currentPlayer","setCurrentPlayer","fate","setFate","showResult","setShowResult","timeout","setTimeout","random","Math","clearTimeout","handleReveal","length","handleNext","prev","style","textAlign","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","color","includes","onClick","padding","fontSize","marginTop","_c","$RefreshReg$"],"sources":["E:/react/counter-react/src/mini/squidgame.js"],"sourcesContent":["\nimport React from \"react\";\nimport { useState,useEffect } from \"react\";\n\n\nconst players=[\n  \"Player 001 (Oh Il-nam)\",\n  \"Player 067 (Kang Sae-byeok)\",\n  \"Player 456 (Seong Gi-hun)\",\n  \"Player 218 (Cho Sang-woo)\",\n  \"Player 101 (Jang Deok-su)\"\n];\n\nfunction SquidGameMovieTask() {\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [fate, setFate] = useState(\"\");\n  const [showResult, setShowResult] = useState(false);\n\n  useEffect(() => {\n    if (showResult) {\n      const timeout = setTimeout(() => {\n        const random = Math.random() < 0.5 ? \"❌ Eliminated\" : \"✅ Survived\";\n        setFate(random);\n      }, 1500); // suspense delay\n\n      return () => clearTimeout(timeout);\n    }\n  }, [showResult]);\n\n  const handleReveal = () => {\n    if (currentPlayer < players.length) {\n      setFate(\"\");\n      setShowResult(true);\n    }\n  };\n\n  const handleNext = () => {\n    setShowResult(false);\n    setCurrentPlayer(prev => prev + 1);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", paddingTop: \"50px\" }}>\n      <h1>🦑 Squid Game Fate Reveal</h1>\n      {currentPlayer < players.length ? (\n        <>\n          <h2>{players[currentPlayer]}</h2>\n          {showResult ? (\n            <h2 style={{ color: fate.includes(\"Survived\") ? \"green\" : \"red\" }}>\n              {fate || \"Revealing fate...\"}\n            </h2>\n          ) : (\n            <button\n              onClick={handleReveal}\n              style={{ padding: \"10px 20px\", fontSize: \"18px\" }}\n            >\n              Reveal Fate\n            </button>\n          )}\n          {fate && (\n            <button\n              onClick={handleNext}\n              style={{ marginTop: \"20px\", padding: \"8px 16px\" }}\n            >\n              Next Player\n            </button>\n          )}\n        </>\n      ) : (\n        <h2>Game Over! All player fates revealed.</h2>\n      )}\n    </div>\n  );\n}\n\nexport default SquidGameMovieTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}