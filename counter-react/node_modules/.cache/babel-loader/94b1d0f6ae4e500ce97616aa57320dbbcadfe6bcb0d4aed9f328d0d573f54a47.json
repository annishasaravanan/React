{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\toggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toggle = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    document.body.style.backgroundColor = isDarkMode ? \"blue\" : \"\";\n    document.body.style.color = isDarkMode ? \"#ffffff\" : \"#000000\";\n  }, [isDarkMode]);\n  const toggleMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isDarkMode ? \"Dark Mode\" : \"Light Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMode,\n      children: [\"Switch to \", isDarkMode ? \"Light\" : \"Dark\", \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Toggle, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = Toggle;\nexport default Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Toggle","_s","isDarkMode","setIsDarkMode","document","body","style","backgroundColor","color","toggleMode","prevMode","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/react/counter-react/src/toggle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Toggle = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundColor = isDarkMode ? \"blue\" : \"\";\r\n    document.body.style.color = isDarkMode ? \"#ffffff\" : \"#000000\";\r\n  }, [isDarkMode]);\r\n\r\n  const toggleMode = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"100px\" }}>\r\n      <h1>{isDarkMode ? \"Dark Mode\" : \"Light Mode\"}</h1>\r\n      <button onClick={toggleMode}>\r\n        Switch to {isDarkMode ? \"Light\" : \"Dark\"} Mode\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAGL,UAAU,GAAG,MAAM,GAAG,EAAE;IAC9DE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAGN,UAAU,GAAG,SAAS,GAAG,SAAS;EAChE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBN,aAAa,CAAEO,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACxC,CAAC;EAED,oBACEX,OAAA;IAAKO,KAAK,EAAE;MAAEK,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACtDd,OAAA;MAAAc,QAAA,EAAKX,UAAU,GAAG,WAAW,GAAG;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClDlB,OAAA;MAAQmB,OAAO,EAAET,UAAW;MAAAI,QAAA,GAAC,YACjB,EAACX,UAAU,GAAG,OAAO,GAAG,MAAM,EAAC,OAC3C;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChB,EAAA,CApBID,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAsBZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}