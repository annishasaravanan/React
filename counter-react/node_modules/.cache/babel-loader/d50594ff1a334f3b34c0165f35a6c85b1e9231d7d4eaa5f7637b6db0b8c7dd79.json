{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\emoji.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodSelector() {\n  _s();\n  const [mood, setMood] = useState('');\n  const moods = {\n    'ðŸ˜Š': 'Happy',\n    'ðŸ˜¢': 'Sad',\n    'ðŸ˜¡': 'Angry',\n    'ðŸ˜´': 'Sleepy'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Your Mood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), Object.keys(moods).map(emoji =>\n    /*#__PURE__*/\n    //emoji is an object \n    _jsxDEV(\"button\", {\n      onClick: () => setMood(emoji),\n      style: {\n        fontSize: '2rem',\n        margin: '10px'\n      },\n      children: emoji\n    }, emoji, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [mood ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"You're feeling \", moods[mood], \" \", mood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No mood selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMood(''),\n        children: \"Clear Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodSelector, \"tTxHQwesqZmzzHbWPwzTdn8fm9A=\");\n_c = MoodSelector;\nexport default MoodSelector;\nvar _c;\n$RefreshReg$(_c, \"MoodSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoodSelector","_s","mood","setMood","moods","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","emoji","onClick","fontSize","margin","_c","$RefreshReg$"],"sources":["E:/react/counter-react/src/emoji.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction MoodSelector() {\r\n  const [mood, setMood] = useState('');\r\n\r\n  const moods = {\r\n    'ðŸ˜Š': 'Happy',\r\n    'ðŸ˜¢': 'Sad',\r\n    'ðŸ˜¡': 'Angry',\r\n    'ðŸ˜´': 'Sleepy',\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <h2>Select Your Mood</h2>\r\n      {Object.keys(moods).map((emoji) => (//emoji is an object \r\n        <button\r\n          key={emoji}\r\n          onClick={() => setMood(emoji)}\r\n          style={{ fontSize: '2rem', margin: '10px' }}\r\n        >\r\n          {emoji}\r\n        </button>\r\n      ))}\r\n      <div style={{ marginTop: '20px' }}>\r\n        {mood ? (\r\n          <h3>You're feeling {moods[mood]} {mood}</h3>\r\n        ) : (\r\n          <h3>No mood selected</h3>\r\n        )}\r\n        <button onClick={() => setMood('')}>Clear Mood</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoodSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,KAAK,GAAG;IACZ,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,OAAO;IACb,IAAI,EAAE;EACR,CAAC;EAED,oBACEL,OAAA;IAAKM,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDT,OAAA;MAAAS,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBC,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAACW,GAAG,CAAEC,KAAK;IAAA;IAAM;IAClCjB,OAAA;MAEEkB,OAAO,EAAEA,CAAA,KAAMd,OAAO,CAACa,KAAK,CAAE;MAC9BX,KAAK,EAAE;QAAEa,QAAQ,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAX,QAAA,EAE3CQ;IAAK,GAJDA,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKJ,CACT,CAAC,eACFb,OAAA;MAAKM,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,GAC/BN,IAAI,gBACHH,OAAA;QAAAS,QAAA,GAAI,iBAAe,EAACJ,KAAK,CAACF,IAAI,CAAC,EAAC,GAAC,EAACA,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAE5Cb,OAAA;QAAAS,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACzB,eACDb,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMd,OAAO,CAAC,EAAE,CAAE;QAAAK,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAhCQD,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAkCrB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}