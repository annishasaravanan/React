{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\counter-react\\\\src\\\\properties\\\\student.js\";\n// Props (short for properties) are read-only inputs passed from a parent component to a child component.\n\n// PropTypes is a type-checking feature in React. It ensures that the props passed to a component are of the correct type.React doesn’t enforce prop types at runtime by default, so PropTypes is used as a development-time tool to catch bugs early.\n\n//Default Props are used to assign default values to props if the parent component doesn’t provide them.\n\nimport proptypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Student(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name : \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Age: \", props.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Student: \", props.isstudent ? \"yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_c = Student;\nStudent.propTypes = {\n  name: proptypes.string,\n  age: proptypes.number,\n  isstudent: proptypes.bool\n};\nStudent.defaultProps = {\n  name: \"Guest\",\n  age: 18,\n  isstudent: false\n};\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["proptypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Student","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","age","isstudent","_c","propTypes","string","number","bool","defaultProps","$RefreshReg$"],"sources":["E:/react/counter-react/src/properties/student.js"],"sourcesContent":["\r\n// Props (short for properties) are read-only inputs passed from a parent component to a child component.\r\n\r\n// PropTypes is a type-checking feature in React. It ensures that the props passed to a component are of the correct type.React doesn’t enforce prop types at runtime by default, so PropTypes is used as a development-time tool to catch bugs early.\r\n\r\n//Default Props are used to assign default values to props if the parent component doesn’t provide them.\r\n\r\n\r\nimport proptypes from 'prop-types';\r\n\r\nfunction Student(props)\r\n{\r\n        return <>\r\n         \r\n         <p>Name : {props.name}</p>\r\n         <p>Age: {props.age}</p>\r\n         <p>Student: {props.isstudent ? \"yes\" : \"No\"}</p>\r\n        \r\n        </>\r\n}\r\n\r\nStudent.propTypes ={\r\n        name: proptypes.string,\r\n        age: proptypes.number,\r\n        isstudent:proptypes.bool,\r\n}\r\n\r\n\r\nStudent.defaultProps ={\r\n\r\n        name: \"Guest\",\r\n        age: 18,\r\n        isstudent: false,\r\n}\r\n\r\nexport default Student;"],"mappings":";AACA;;AAEA;;AAEA;;AAGA,OAAOA,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,OAAOA,CAACC,KAAK,EACtB;EACQ,oBAAOJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBAENL,OAAA;MAAAK,QAAA,GAAG,SAAO,EAACD,KAAK,CAACE,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BV,OAAA;MAAAK,QAAA,GAAG,OAAK,EAACD,KAAK,CAACO,GAAG;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBV,OAAA;MAAAK,QAAA,GAAG,WAAS,EAACD,KAAK,CAACQ,SAAS,GAAG,KAAK,GAAG,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAE/C,CAAC;AACX;AAACG,EAAA,GATQV,OAAO;AAWhBA,OAAO,CAACW,SAAS,GAAE;EACXR,IAAI,EAAER,SAAS,CAACiB,MAAM;EACtBJ,GAAG,EAAEb,SAAS,CAACkB,MAAM;EACrBJ,SAAS,EAACd,SAAS,CAACmB;AAC5B,CAAC;AAGDd,OAAO,CAACe,YAAY,GAAE;EAEdZ,IAAI,EAAE,OAAO;EACbK,GAAG,EAAE,EAAE;EACPC,SAAS,EAAE;AACnB,CAAC;AAED,eAAeT,OAAO;AAAC,IAAAU,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}